type Document implements Node {
  id: ID!
  timestamp: DateTime!
  updates: [Int!]!
  version: Int!
}

type DocumentSnapshot {
  timestamp: DateTime!
  updates: [Int!]!
  version: Int!
}

# Input Types
input GetLatestDocumentInput {
  projectId: ID!
}

input GetDocumentHistoryInput {
  projectId: ID!
}

input RollbackDocumentInput {
  projectId: ID!
  version: Int!
}

# Payload Types
type DocumentPayload {
  document: Document!
}

# Query and Mutation
extend type Query {
  latestDocument(input: GetLatestDocumentInput!): Document
  documentHistory(input: GetDocumentHistoryInput!): [DocumentSnapshot!]!
}

extend type Mutation {
  rollbackDocument(input: RollbackDocumentInput!): DocumentPayload
}
